name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: DB_pupshops
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:1234@localhost:5432/DB_pupshops
      JWT_SECRET: pupshops
      MERCADO_PAGO_ACCESS_TOKEN: APP_USR-1158358512957720-092318-dfe5d1ec04ecb9c1622a5ea8adf71220-1994103886
      CLOUDINARY_CLOUD_NAME: dncbavrxt
      CLOUDINARY_API_KEY: 887721685277851
      CLOUDINARY_API_SECRET: JQhdfiBIGwQKNZdLgspWYK_07TY

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Backend: Instalar dependencias y correr tests
      - name: Set up Node.js for backend
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install backend dependencies
        working-directory: ./back/pupshops  # Ajuste de ruta
        run: npm install

      - name: Run backend tests
        working-directory: ./back/pupshops  # Ajuste de ruta
        run: npm run test

      # Frontend: Instalar dependencias y correr tests
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install frontend dependencies
        working-directory: ./front  # Ruta correcta para el frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./front  # Ruta correcta para el frontend
        run: npm run test

  # Construcción de las imágenes Docker y push a Docker Hub
  dockerize:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Login en Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Construir imagen Docker del backend
      - name: Build backend Docker image
        run: docker build -t fmonfasani/backend:latest ./back/pupshops  # Ajuste de ruta

      # Construir imagen Docker del frontend
      - name: Build frontend Docker image
        run: docker build -t fmonfasani/frontend:latest ./front  # Ajuste de ruta

      # Subir la imagen del backend a Docker Hub
      - name: Push backend Docker image
        run: docker push fmonfasani/backend:latest

      # Subir la imagen del frontend a Docker Hub
      - name: Push frontend Docker image
        run: docker push fmonfasani/frontend:latest

  # Despliegue (puedes adaptarlo según tu plataforma)
  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render (or any other service)
        run: |
          echo "Este paso se debe personalizar según el servicio que utilices para el despliegue."
